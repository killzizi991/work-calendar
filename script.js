// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentDate = new Date();
let currentYear = currentDate.getFullYear();
let currentMonth = currentDate.getMonth();
let selectedDay = null;
let massColoringMode = null; // 'fill', 'border', –∏–ª–∏ null

// –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
let calendarData = JSON.parse(localStorage.getItem('calendarData')) || {};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    generateCalendar();
    setupEventListeners();
    initPeriodSelector();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if (!localStorage.getItem('firstRun')) {
        localStorage.setItem('firstRun', 'true');
        showWelcomeMessage();
    }
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
function generateCalendar() {
    const calendar = document.getElementById('calendar');
    calendar.innerHTML = '';
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    const daysOfWeek = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];
    daysOfWeek.forEach(day => {
        const dayElement = document.createElement('div');
        dayElement.className = 'day-header';
        dayElement.textContent = day;
        calendar.appendChild(dayElement);
    });
    
    // –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
    const firstDay = new Date(currentYear, currentMonth, 1);
    // –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞
    const lastDay = new Date(currentYear, currentMonth + 1, 0);
    
    // –ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è –¥–Ω–µ–π –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    const startOffset = (firstDay.getDay() || 7) - 1;
    for (let i = 0; i < startOffset; i++) {
        const empty = document.createElement('div');
        empty.className = 'day empty';
        calendar.appendChild(empty);
    }
    
    // –î–Ω–∏ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= lastDay.getDate(); day++) {
        const dayElement = document.createElement('div');
        dayElement.className = 'day';
        
        const dateKey = `${currentYear}-${currentMonth+1}-${day}`;
        const dayData = calendarData[dateKey] || {};
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const formatSalesNumber = (value) => {
            if (value >= 100000) return (value/1000).toFixed(0) + 'k';
            if (value >= 10000) return (value/1000).toFixed(1) + 'k';
            return value;
        };
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        dayElement.innerHTML = `
            <div class="day-number">${day}</div>
            ${dayData.sales ? `<div class="day-sales">${formatSalesNumber(dayData.sales)} —Ä—É–±</div>` : ''}
        `;
        
        // –¶–≤–µ—Ç —Ñ–æ–Ω–∞
        if (dayData.color) {
            dayElement.style.backgroundColor = dayData.color;
        }
        
        // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±–≤–æ–¥–∫–∞
        if (dayData.functionalBorder) {
            dayElement.classList.add('functional-border');
        }
        
        // –ò–∫–æ–Ω–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        if (dayData.comment) {
            const commentIcon = document.createElement('div');
            commentIcon.className = 'day-comment';
            commentIcon.textContent = 'üí¨';
            commentIcon.style.position = 'absolute';
            commentIcon.style.top = '5px';
            commentIcon.style.right = '5px';
            commentIcon.style.fontSize = '0.8em';
            dayElement.appendChild(commentIcon);
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
        const today = new Date();
        if (currentYear === today.getFullYear() && 
            currentMonth === today.getMonth() && 
            day === today.getDate()) {
            dayElement.classList.add('today');
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        dayElement.addEventListener('click', () => handleDayClick(day));
        calendar.appendChild(dayElement);
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const monthNames = ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
      "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"];
    document.getElementById('current-month-year').textContent = 
        `${monthNames[currentMonth]} ${currentYear}`;
    
    // –†–∞—Å—á–µ—Ç—ã
    calculateSummary();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –¥–Ω—é
function handleDayClick(day) {
    if (massColoringMode === 'fill') {
        applyFillColor(day);
    } else if (massColoringMode === 'border') {
        toggleFunctionalBorder(day);
    } else {
        openModal(day);
    }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞/—Å–Ω—è—Ç–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–±–≤–æ–¥–∫–∏
function toggleFunctionalBorder(day) {
    const dateKey = `${currentYear}-${currentMonth+1}-${day}`;
    let dayData = calendarData[dateKey] || {};
    
    if (dayData.functionalBorder) {
        // –°–Ω—è—Ç–∏–µ –æ–±–≤–æ–¥–∫–∏
        dayData.functionalBorder = false;
        dayData.sales = 0;
        showNotification('–û–±–≤–æ–¥–∫–∞ —Å–Ω—è—Ç–∞');
    } else {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
        if (dayData.sales && dayData.sales !== 0) {
            showNotification('–°–Ω–∞—á–∞–ª–∞ –æ–±–Ω—É–ª–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ');
            return;
        }
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–≤–æ–¥–∫–∏
        dayData.functionalBorder = true;
        dayData.sales = 30000;
        showNotification('–û–±–≤–æ–¥–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    }
    
    calendarData[dateKey] = dayData;
    localStorage.setItem('calendarData', JSON.stringify(calendarData));
    generateCalendar();
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è
function applyFillColor(day) {
    const dateKey = `${currentYear}-${currentMonth+1}-${day}`;
    let dayData = calendarData[dateKey] || {};
    const activeColor = document.querySelector('.palette-tool.fill.active');
    
    if (activeColor) {
        dayData.color = activeColor.dataset.color;
        calendarData[dateKey] = dayData;
        localStorage.setItem('calendarData', JSON.stringify(calendarData));
        generateCalendar();
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º
    document.getElementById('prev-month').addEventListener('click', () => {
        currentMonth--;
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear--;
        }
        generateCalendar();
    });
    
    document.getElementById('next-month').addEventListener('click', () => {
        currentMonth++;
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear++;
        }
        generateCalendar();
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.querySelector('.close').addEventListener('click', closeModal);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    document.getElementById('save-data').addEventListener('click', saveDayData);
    
    // –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞
    document.querySelectorAll('.color-option').forEach(option => {
        option.addEventListener('click', function() {
            document.querySelectorAll('.color-option').forEach(el => 
                el.classList.remove('selected'));
            this.classList.add('selected');
        });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
    window.addEventListener('click', (event) => {
        if (event.target === document.getElementById('modal')) {
            closeModal();
        }
        if (event.target === document.getElementById('summary-modal')) {
            closeSummaryModal();
        }
        if (event.target === document.getElementById('period-modal')) {
            closePeriodModal();
        }
    });
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏
    window.addEventListener('beforeunload', () => {
        localStorage.setItem('calendarData', JSON.stringify(calendarData));
    });
    
    // –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
    document.getElementById('summary-btn').addEventListener('click', showSummaryModal);
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
    document.getElementById('month-year-selector').addEventListener('click', openPeriodModal);
    
    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –≤—ã–±–æ—Ä–µ –ø–µ—Ä–∏–æ–¥–∞
    document.getElementById('period-back').addEventListener('click', goBackToYears);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.querySelectorAll('.modal .close').forEach(btn => {
        btn.addEventListener('click', function() {
            const modal = this.closest('.modal');
            modal.style.display = 'none';
        });
    });
    
    // –ö–Ω–æ–ø–∫–∞ –ø–∞–ª–∏—Ç—Ä—ã
    document.getElementById('palette-btn').addEventListener('click', togglePaletteMode);
    
    // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–∞–ª–∏—Ç—Ä—ã
    document.querySelectorAll('.palette-tool.fill').forEach(tool => {
        tool.addEventListener('click', function() {
            // –°–±—Ä–æ—Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤—ã–±–æ—Ä–∞
            document.querySelectorAll('.palette-tool').forEach(t => 
                t.classList.remove('active'));
            
            // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ
            this.classList.add('active');
            massColoringMode = 'fill';
        });
    });
    
    // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –æ–±–≤–æ–¥–∫–∏
    document.getElementById('palette-border').addEventListener('click', function() {
        document.querySelectorAll('.palette-tool').forEach(t => 
            t.classList.remove('active'));
        this.classList.add('active');
        massColoringMode = 'border';
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –ø–∞–ª–∏—Ç—Ä—ã
function togglePaletteMode() {
    const paletteBtn = document.getElementById('palette-btn');
    const palettePanel = document.getElementById('palette-panel');
    
    if (palettePanel.style.display === 'flex') {
        // –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞
        palettePanel.style.display = 'none';
        paletteBtn.classList.remove('active');
        massColoringMode = null;
        document.querySelectorAll('.palette-tool').forEach(t => 
            t.classList.remove('active'));
    } else {
        // –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º
        palettePanel.style.display = 'flex';
        paletteBtn.classList.add('active');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
function initPeriodSelector() {
    const yearsContainer = document.getElementById('year-options');
    const monthsContainer = document.getElementById('month-options');
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ–¥–æ–≤ (2024-2030)
    for (let year = 2024; year <= 2030; year++) {
        const yearBtn = document.createElement('button');
        yearBtn.textContent = year;
        yearBtn.className = 'period-option';
        yearBtn.addEventListener('click', () => selectYear(year));
        yearsContainer.appendChild(yearBtn);
    }
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Å—è—Ü–µ–≤
    const months = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
        '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    
    months.forEach((month, index) => {
        const monthBtn = document.createElement('button');
        monthBtn.textContent = month;
        monthBtn.className = 'period-option';
        monthBtn.addEventListener('click', () => selectMonth(index));
        monthsContainer.appendChild(monthBtn);
    });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
function openPeriodModal() {
    document.getElementById('period-modal').style.display = 'block';
    document.getElementById('year-step').style.display = 'block';
    document.getElementById('month-step').style.display = 'none';
    document.getElementById('period-back').style.display = 'none';
}

// –í—ã–±–æ—Ä –≥–æ–¥–∞
function selectYear(year) {
    currentYear = year;
    document.getElementById('year-step').style.display = 'none';
    document.getElementById('month-step').style.display = 'block';
    document.getElementById('period-back').style.display = 'block';
}

// –í—ã–±–æ—Ä –º–µ—Å—è—Ü–∞
function selectMonth(month) {
    currentMonth = month;
    generateCalendar();
    closePeriodModal();
}

// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –≤—ã–±–æ—Ä–µ –ø–µ—Ä–∏–æ–¥–∞
function goBackToYears() {
    document.getElementById('year-step').style.display = 'block';
    document.getElementById('month-step').style.display = 'none';
    document.getElementById('period-back').style.display = 'none';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–µ—Ä–∏–æ–¥–∞
function closePeriodModal() {
    document.getElementById('period-modal').style.display = 'none';
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–Ω—è
function openModal(day) {
    selectedDay = day;
    const modal = document.getElementById('modal');
    document.getElementById('modal-day').textContent = day;
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    const dateKey = `${currentYear}-${currentMonth+1}-${day}`;
    const dayData = calendarData[dateKey] || {};
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±–≤–æ–¥–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 30000
    document.getElementById('sales-input').value = 
        dayData.functionalBorder ? 30000 : (dayData.sales || '');
    
    document.getElementById('comment-input').value = dayData.comment || '';
    
    // –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
    document.querySelectorAll('.color-option').forEach(el => 
        el.classList.remove('selected'));
    
    // –í—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
    if (dayData.color) {
        const colorOption = [...document.querySelectorAll('.color-option')].find(
            opt => opt.dataset.color === dayData.color
        );
        if (colorOption) colorOption.classList.add('selected');
    }
    
    modal.style.display = 'block';
    setTimeout(() => {
        document.getElementById('sales-input').focus();
    }, 300);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    document.getElementById('modal').style.display = 'none';
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–Ω—è
function saveDayData() {
    const dateKey = `${currentYear}-${currentMonth+1}-${selectedDay}`;
    const selectedColor = document.querySelector('.color-option.selected')?.dataset.color || '#ffffff';
    const salesValue = parseInt(document.getElementById('sales-input').value) || 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ
    const hadFunctionalBorder = calendarData[dateKey]?.functionalBorder || false;
    
    // –°–Ω–∏–º–∞–µ–º –æ–±–≤–æ–¥–∫—É –µ—Å–ª–∏:
    // 1. –ë—ã–ª–∞ –æ–±–≤–æ–¥–∫–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å —Å 30000
    // 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Ä—É—á–Ω—É—é –∏–∑–º–µ–Ω–∏–ª –∑–Ω–∞—á–µ–Ω–∏–µ
    const removeBorder = hadFunctionalBorder && salesValue !== 30000;
    
    calendarData[dateKey] = {
        ...calendarData[dateKey],
        sales: salesValue,
        comment: document.getElementById('comment-input').value || '',
        color: selectedColor,
        // –°–Ω–∏–º–∞–µ–º –æ–±–≤–æ–¥–∫—É –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
        functionalBorder: hadFunctionalBorder && !removeBorder
    };
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
    localStorage.setItem('calendarData', JSON.stringify(calendarData));
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    generateCalendar();
    closeModal();
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    showNotification('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
}

// –†–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
function calculateSummary() {
    let workDays = 0;
    let totalSales = 0;
    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
    
    for (let day = 1; day <= daysInMonth; day++) {
        const dateKey = `${currentYear}-${currentMonth+1}-${day}`;
        if (calendarData[dateKey] && calendarData[dateKey].sales > 0) {
            workDays++;
            totalSales += calendarData[dateKey].sales;
        }
    }
    
    // –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã
    const totalEarnedBeforeTax = (totalSales * 0.07) + (workDays * 1000);
    const totalEarned = totalEarnedBeforeTax;
    const balance = totalEarned - 25000; // –û—Å—Ç–∞—Ç–æ–∫ = –≤—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ - 25000
    const salary = balance + 10875;     // –ó–∞—Ä–ø–ª–∞—Ç–∞ = –æ—Å—Ç–∞—Ç–æ–∫ + 10875
    
    return {
        workDays,
        totalSales,
        totalEarned,
        salary,
        balance
    };
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏
function showSummaryModal() {
    const summaryData = calculateSummary();
    const modal = document.getElementById('summary-modal');
    
    document.getElementById('modal-work-days').textContent = summaryData.workDays;
    document.getElementById('modal-total-sales').textContent = summaryData.totalSales;
    document.getElementById('modal-total-earned').textContent = summaryData.totalEarned.toFixed(2);
    document.getElementById('modal-salary').textContent = summaryData.salary.toFixed(2);
    document.getElementById('modal-balance').textContent = summaryData.balance.toFixed(2);
    
    document.getElementById('summary-month-year').textContent = 
        document.getElementById('current-month-year').textContent;
    
    modal.style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–∞—Å—á–µ—Ç–æ–≤
function closeSummaryModal() {
    document.getElementById('summary-modal').style.display = 'none';
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message) {
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        notification.style.opacity = '1';
        notification.style.transform = 'translate(-50%, 0)';
    }, 10);
    
    setTimeout(() => {
        notification.style.opacity = '0';
        notification.style.transform = 'translate(-50%, 20px)';
        setTimeout(() => document.body.removeChild(notification), 300);
    }, 2000);
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
function showWelcomeMessage() {
    setTimeout(() => {
        showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –¥–µ–Ω—å –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö');
    }, 1000);
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
function exportData() {
    const dataStr = JSON.stringify(calendarData, null, 2);
    const blob = new Blob([dataStr], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    
    const a = document.createElement('a');
    a.href = url;
    a.download = `calendar-data-${new Date().toISOString().slice(0,10)}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
}

// –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
function importData(event) {
    const file = event.target.files[0];
    if (!file) return;
    
    const reader = new FileReader();
    reader.onload = function(e) {
        try {
            const importedData = JSON.parse(e.target.result);
            calendarData = importedData;
            localStorage.setItem('calendarData', JSON.stringify(calendarData));
            generateCalendar();
            showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
        } catch (error) {
            showNotification('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
            console.error('Import error:', error);
        }
    };
    reader.readAsText(file);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
if (!document.querySelector('#notification-styles')) {
    const style = document.createElement('style');
    style.id = 'notification-styles';
    style.textContent = `
        .notification {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%) translateY(20px);
            background-color: #4e73df;
            color: white;
            padding: 12px 25px;
            border-radius: 25px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.2);
            z-index: 1000;
            opacity: 0;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            white-space: nowrap;
        }
    `;
    document.head.appendChild(style);
}

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è Android: –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
window.addEventListener('resize', () => {
    generateCalendar();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Service Worker
if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
        navigator.serviceWorker.register('sw.js')
            .then(reg => console.log('Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω', reg))
            .catch(err => console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker', err));
    });
}
